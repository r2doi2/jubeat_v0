#include "d3m.hsp"
#include "fumen_read.hsp"
#module	notu_judge
	#include "hspogg.as"
	#deffunc write_notu
	screen 0,1280,1024,0,0,0

	dmmini
	mmload music_file@,1,0	; wavファイル読み込み
	
	celload "pics\\allnormal2.png",,0
	pic_id=stat											; 元画像のIDを保存
	celload "pics\\allperfect2.png",,0	; perfect画像ファイル
	pic_suc=stat
	celload "pics\\allgood2.png",,0	; good画像ファイル
	pic_goo=stat
	celload "pics\\allbad2.png",,0	; bad画像ファイル
	pic_bad=stat
	celload "pics\\blackbox.png",,0	; 黒箱画像ファイル
	pic_bb=stat
	celdiv pic_id,222,222				; パーツのサイズ
	celdiv pic_suc,222,222
	celdiv pic_goo,222,222
	celdiv pic_bad,222,222	
	celdiv pic_bb,222,222
	gmode 0
	dim notu,4,4,2				;ノーツの配列
	dim a,4,4							;ボタン情報
	dim actflag,4,4				;どのタイミングで押されたか判断フラグ
	dim pressed,4,4				;ボタン押されたら立つフラグ

	pfcount = 0
	gdcount = 0
	bdcount = 0
	pftiming = 14											;パーフェクトのフレーム
	heartbeat_interval = 60000/tempo@	;一拍間隔
	endsignal=0
	thr=0
	#uselib "user32.dll"
#func SetTimer  "SetTimer"  int, int, int, int
#func KillTimer "KillTimer" int, int

#define WM_TIMER        0x0113

#define ID_TIMER        1       ; タイマーID (0 以外の値)

oncmd  gosub *OnTimer, WM_TIMER
onexit gosub *OnClose

	
	time1 = d3timer()	//時計
	time2 = d3timer()	//ノーツ描画計測
	time4 = d3timer()	//間隔保持計測
	mmplay 1
	panda=0
	while
		while(time1 - time4 <= offset@)
			await 1
			time1 = d3timer()
		wend
		await 1
		if(panda==0){
			SetTimer hwnd, ID_TIMER, heartbeat_interval, 0
			panda=1
		}
		time1 = d3timer()
		if(time1 - time2 >= 40){
			for i,0,4,1
				for j,0,4,1
					if(notu(i,j,1)&&notu(i,j,0)<25){	;各ノーツごとにフラグが
						notu(i,j,0)++										;立っているか
						if(pressed(i,j)==1){
							thr=1
						}
					}else{
						if((notu(i,j,1)&&notu(i,j,0==25))&&thr==0){
							bdcount++
						}
						notu(i,j,0)=0
						notu(i,j,1)=0										;一周するとフラグも下ろす
						actflag(i,j)=0
						pressed(i,j)=0
						thr=0
						
					}
					posx=10+i*256
					posy=j*256
					pos posx,posy
					if(pressed(i,j)==1&&actflag(i,j)==0){
						if(abs(notu(i,j,0)-pftiming)<=1){
							actflag(i,j)=1;perfect中に押された？
							pfcount++
						}else{
							if(abs(notu(i,0,0)-pftiming)<=2){
								actflag(i,j)=2;good中に押された？
								gdcount++
							}else{
								if(abs(notu(i,0,0)-pftiming)>=3){
									actflag(i,j)=notu(i,j,0)-pftiming;bad中に押された？
									bdcount++
								}
							}
						}
					}
					if(actflag(i,j)==0){
						if(notu(i,j,0)==0){
							celput pic_bb,0,1,1
						}else{
							celput pic_id,notu(i,j,0),1,1						;ただの黒四角に変えるべき?
						}
					}else{
						if(actflag(i,j)==1){
							celput pic_suc,notu(i,j,0)-(pftiming-1)
						}else{
							if(actflag(i,j)==2){
								celput pic_goo,notu(i,j,0)-(pftiming-2)
							}else{
								celput pic_bad,notu(i,j,0)-(14+actflag(i))
							}
						}
					}
				next
			next
			time2 = d3timer()
		}
		getkey a(0,0),48+4	;4
		getkey a(1,0),48+5	;5
		getkey a(2,0),48+6	;6
		getkey a(3,0),48+7	;7
		getkey a(0,1),65+17	;r
		getkey a(1,1),65+19	;t
		getkey a(2,1),65+24	;y
		getkey a(3,1),65+20	;u
		getkey a(0,2),65+5	;f
		getkey a(1,2),65+6	;g
		getkey a(2,2),65+7	;h
		getkey a(3,2),65+9	;j
		getkey a(0,3),65+21	;v
		getkey a(1,3),65+1	;b
		getkey a(2,3),65+13	;n
		getkey a(3,3),65+12	;m
		for i , 0 , 4 , 1
			for j , 0 , 4 , 1				
				pressed(i,j)=a(i,j)
			next
		next
		if(endsignal==1){
			//goto *endnn
			_break
		}
	wend
	return
*OnTimer
			if(data@fumen_read(0)=="e"){
				mmstop
				endsignal=1
				return
			}
			notu_read(csvtext@)
			for i,1,16,1
				if(format_flag@fumen_read==0){
					if(data@fumen_read(i-1)==";"){
						_break 
					}
					//fps = d3getfps()
					title "notu = "+ data@fumen_read(i-1)
					notu(peek(data@fumen_read(i-1),0)-48,peek(data@fumen_read(i-1),1)-48,1)=1
					//mes data@fumen_read(i-1)
					//譜面が0~nまで入っている
				}else{
					if(data@fumen_read(i)==";"){
						_break
					}
					//パラメータが1~nに入っている
				}
			next


return

*OnClose
KillTimer hwnd, ID_TIMER

#global
;abcdefghijklmnopqrstuvwxyz
